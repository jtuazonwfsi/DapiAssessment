import { DapiConfig } from '../constants/config';
import { IGetBeneficiariesResponse } from '../types/response/getBeneficiaries';
import { ICBBeneficiary } from '../types/request/createBeneficiary';
import { IBaseResponse } from '../types/response/base';
import { ITransfer, ITransferAutoflow } from '../types/request/createTransfer';
import { ICreateTransferResponse } from '../types/response/createTransfer';
import { IUserInputs } from '../types/models/IUserInputs';
export default class Payment {
    private utils;
    private config;
    constructor(config: DapiConfig);
    getBeneficiaries(accessToken: string, userSecret: string, userInputs?: IUserInputs[]): Promise<IGetBeneficiariesResponse>;
    createBeneficiary(beneficiairy: ICBBeneficiary, accessToken: string, userSecret: string, userInputs?: IUserInputs[]): Promise<IBaseResponse>;
    createTransfer(transfer: ITransfer, accessToken: string, userSecret: string, userInputs?: IUserInputs[]): Promise<ICreateTransferResponse>;
    transferAutoFlow(transfer: ITransferAutoflow, accessToken: string, userSecret: string, userInputs?: IUserInputs[]): Promise<ICreateTransferResponse>;
}
