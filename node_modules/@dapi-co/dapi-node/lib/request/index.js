"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOperationStatus = exports.requestGetAccountsMetadata = exports.requestTransferAutoFlow = exports.requestCreateTransfer = exports.requestCreateBeneficiary = exports.requestGetBeneficiaries = exports.requestGetTransactions = exports.requestGetBalance = exports.requestGetAccounts = exports.requestGetIdentity = exports.requestDelinkUser = exports.requestExchangeToken = exports.handleSDKDapiRequest = void 0;
const axios_1 = require("axios");
const Url_1 = require("../constants/Url");
const dapiRequest = (body, url, headers, comfigFromSDKRequests = false) => {
    return axios_1.default({
        url: comfigFromSDKRequests ? url : `${Url_1.DAPI_URL.BASE_URL}${url}`,
        data: body,
        method: 'POST',
        headers,
    });
};
exports.handleSDKDapiRequest = (body, headers) => {
    return dapiRequest(body, Url_1.DAPI_URL.DEPLOT_WITH_DAPI_URL, Object.assign(Object.assign({}, headers), { host: 'dd.dapi.co', Host: 'dd.dapi.co' }), true);
};
exports.requestExchangeToken = (accessCode, connectionID, appSecret) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        accessCode,
        connectionID,
        appSecret,
    }, Url_1.DAPI_URL.AUTH_URLS.EXCHANGE_TOKEN, null));
});
exports.requestDelinkUser = (accessToken, userSecret, appSecret) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        accessToken,
        userSecret,
        appSecret,
    }, Url_1.DAPI_URL.AUTH_URLS.DELINK_USER, null));
});
exports.requestGetIdentity = (accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        userInputs,
    }, Url_1.DAPI_URL.DATA_URLS.GET_IDENTITY, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestGetAccounts = (accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        userInputs,
    }, Url_1.DAPI_URL.DATA_URLS.GET_ACCOUNTS, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestGetBalance = (accessToken, userSecret, appSecret, accountID, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        accountID,
        userInputs,
    }, Url_1.DAPI_URL.DATA_URLS.GET_BALANCE, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestGetTransactions = (accessToken, userSecret, appSecret, accountID, fromDate, toDate, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        accountID,
        fromDate,
        toDate,
        userInputs,
    }, Url_1.DAPI_URL.DATA_URLS.GET_TRANSACTIONS, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestGetBeneficiaries = (accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        userInputs,
    }, Url_1.DAPI_URL.PAYMENT_URLS.GET_BENEFICIARIES, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestCreateBeneficiary = (beneficiairy, accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest(Object.assign(Object.assign({ userSecret,
        appSecret }, beneficiairy), { userInputs }), Url_1.DAPI_URL.PAYMENT_URLS.CREATE_BENEFICIARY, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestCreateTransfer = (transfer, accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest(Object.assign(Object.assign({ userSecret,
        appSecret }, transfer), { userInputs }), Url_1.DAPI_URL.PAYMENT_URLS.CREATE_TRANSFER, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestTransferAutoFlow = (transfer, accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest(Object.assign(Object.assign({ userSecret,
        appSecret }, transfer), { userInputs }), Url_1.DAPI_URL.PAYMENT_URLS.CREATE_TRANSFER, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.requestGetAccountsMetadata = (accessToken, userSecret, appSecret, userInputs) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        userSecret,
        appSecret,
        userInputs,
    }, Url_1.DAPI_URL.METADATA_URLS.GET_ACCOUNTS, {
        Authorization: `Bearer ${accessToken}`,
    }));
});
exports.getOperationStatus = (operationID, appSecret) => __awaiter(void 0, void 0, void 0, function* () {
    return (yield dapiRequest({
        operationID,
        appSecret,
    }, Url_1.DAPI_URL.OPERATION_URLS.OPERATION_STATUS, {}));
});
